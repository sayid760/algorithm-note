(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{234:function(t,n,s){"use strict";s.r(n);var a=s(17),e=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("贪心算法"),s("br"),t._v("\n本质：先分布解决，每一步保证是最完美的解决方案，通过多步和每一步分别去找最佳方案，希望问题得到最优解（局部最优解，次优解）"),s("br"),t._v("\n指导思想：当问题非常复杂非常抽象的时候，找不到规律，可以优先考虑贪心算法，先得到一部分解决，不断去优化算法、策略，去靠近最优解的答案\n贪心算法的基本思路："),s("br")]),t._v(" "),s("ol",[s("li",[t._v("建立数学模型来描述问题。")]),t._v(" "),s("li",[t._v("把求解的问题分成若干个子问题。")]),t._v(" "),s("li",[t._v("对每一子问题求解，得到子问题的局部最优解。")]),t._v(" "),s("li",[t._v("把子问题的解局部最优解合成原来解问题的一个解")]),t._v(" "),s("li",[t._v("贪心算法适用的问题：寻找最优解的过程，目的是得到当前最优解、可惜的是，它需要证明后才能真正运用到题目的算法中。")])]),t._v(" "),s("h2",{attrs:{id:"饼干"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#饼干"}},[t._v("#")]),t._v(" 饼干")]),t._v(" "),s("h2",{attrs:{id:"买股票最佳时机-ii"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#买股票最佳时机-ii"}},[t._v("#")]),t._v(" 买股票最佳时机 II")]),t._v(" "),s("p",[t._v("给定一个数组，它的第i 个元素是一支给定股票第i天的价格。"),s("br"),t._v("\n设计一个算法来计算你所能获取的最大利润。你可以尽可能地完成更多的交易（多次买卖一支股票）。"),s("br"),t._v("\n注意：你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。")]),t._v(" "),s("blockquote",[s("p",[t._v("输入: [7,1,5,3,6,4]"),s("br"),t._v("\n输出: 7"),s("br"),t._v("\n解释: 在第2天（股票价格=1）的时候买入，在第3天（股票价格=5）的时候卖出,这笔交易所能获得利润=5-1=4。"),s("br"),t._v("\n随后，在第4天（股票价格=3）的时候买入，在第5天（股票价格=6）的时候卖出,这笔交易所能获得利润=6-3=3")])]),t._v(" "),s("blockquote",[s("p",[t._v("策略1：从最低点买入，最高点卖出（追求单词利益）"),s("br"),t._v("\n策略2：从低点买入，只要赚到钱就卖出，不断买卖（追求多次利益）"),s("br"),t._v("\n策略3：从低点买入，到价格高点卖出，不断买卖（在保证单词利益的基础上，实现多次交易）")])]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("function maxProfit(prices){\n  let count = 0\n  for(let i=0, len= prices.length; i<len; i++){\n    for(let j=i; j<len-1; j++){\n      // 第二天上涨了，就不卖\n      if(prices[j+1] > prices[j]){\n        // 收益累加=差值+之前收益累加\n        count +=prices[j+1] - prices[j]\n        // 当有一天不满足了，这个点就是最高点，要记录下来，卖出\n        i=j \n      }else{ // else 下面的可以不要\n        // 如果没找到高点，一直跌了，比如[7,6,5,4,3]\n        i=j\n        break \n      }\n    }\n  }\n  return count\n}\nconsole.log(maxProfit([7,6,5,4,3]))\n")])])]),s("h2",{attrs:{id:"柠檬水找零"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#柠檬水找零"}},[t._v("#")]),t._v(" 柠檬水找零")]),t._v(" "),s("p",[t._v("在柠檬水摊上，每一杯柠檬水的售价为5美元。"),s("br"),t._v("\n顾客排队购买你的产品，（按账单bills支付的顺序）一次购买一杯。"),s("br"),t._v("\n每位顾客只买一杯柠檬水，然后向你付5美元、10美元或20美元。你必须给每个顾客正确找零，也就是说净交易是每位顾客向你支付5美元。"),s("br"),t._v("\n注意，一开始你手头没有任何零钱。"),s("br"),t._v("\n如果你能给每位顾客正确找零，返回true，否则返回false "),s("br")]),t._v(" "),s("blockquote",[s("p",[t._v("输入：[5,5,5,10,20]"),s("br"),t._v("\n输出：true"),s("br"),t._v("\n解释："),s("br"),t._v("\n前 3 位顾客那里，我们按顺序收取3张5美元的钞票。"),s("br"),t._v("\n第 4 位顾客那里，我们收取一张10美元的钞票，并返还5美元。"),s("br"),t._v("\n第 5 位顾客那里，我们找还一张10美元的钞票和一张 5 美元的钞票。"),s("br"),t._v("\n由于所有客户都得到了正确的找零，所以我们输出 true。"),s("br")])]),t._v(" "),s("blockquote",[s("p",[t._v("策略1：找钱，不缺分金额直到找到足够的零钱（追求单次找零）"),s("br"),t._v("\n策略2：找钱，优先给金额大的零钱，尽量把零钱放在手里（追求多次找零）")])]),t._v(" "),s("p",[t._v("思路：找钱时，先把大额的先找出去，有20的先给20的，满足大额的\n因此需要排序现有的钱，先拿大的再拿小的")]),t._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("function lemonadeChange(input){\n    // 钱箱\n    let hand=[]\n    // 只要有顾客买就要找钱，判断是否有顾客在\n    while(input.length){\n        // 取出当前排在最前面顾客的钱\n        let money =input.shift()\n        // 这种情况下不需要找零\n        if(money === 5){\n            hand.push(money)\n        }else{\n            // 手里的钱要降序排列，把大面积的放前面\n            hand.sort((a, b)=> b-a)\n            // 顾客的钱减去饮料的钱就是需要找的钱\n            let change = money - 5\n            // 1. 遍历循环找钱\n            for(let i = 0, len=hand.length; i<len; i++){\n              if(hand[i] <= change){ \n                // 拿到的钱小于要找的钱，就先给\n                change -= hand[i]\n                // 剔除找出去的钱\n                hand.splice(i, 1)\n                // 删除了元素，数组的长度发生变化，要维持刚才的i不变\n                i--\n              }\n              // 如果要找的钱等于0，就跳出循环\n              if(change === 0){\n                break\n              }\n            }\n            // 2. 没有足够的钱找给顾客\n            if(change!=0){\n              return false\n            }else{\n              // 找开钱之后，把赚到的钱放到零钱箱\n              hand.push(money)\n            }\n        }\n    }\n    // 默认都找开了\n    return true\n}\nconsole.log(lemonadeChange([5,5,5,10,20]))\n")])])]),s("h2",{attrs:{id:"跳跃游戏"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#跳跃游戏"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://leetcode-cn.com/problems/jump-game/",target:"_blank",rel:"noopener noreferrer"}},[t._v("跳跃游戏"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("贪心算法：最大能跳多远")]),t._v(" "),s("p",[t._v("只能跳到我之前的某一步，不能跨越我，那么肯定到不了末尾，所以设置返回false")]),t._v(" "),s("p",[t._v("当前下标比你之前能跨域的最大数还要大的话，你之前最远的跨不过我，这种情况肯定不满足 return false")]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n      [ 2     2     1    0    4]\ni=0   maxStep=0+2=2 \ni=1   maxStep=1+2=3\ni=2   maxStep=2+1=3\ni=3   maxStep < i =>  3 < 3  return false\n*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("canJump")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("nums")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" maxStep "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** 当前可以达到的最大位置，到不了当前遍历的位置i，直接返回false */")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("maxStep "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n        maxStep "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("maxStep"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/** 当前可以达到的最大位置，已经可以达到最后一个位置，返回true */")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("maxStep "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">=")]),t._v(" length "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("canJump")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  \n")])])]),s("h2",{attrs:{id:"跳跃游戏-ii"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#跳跃游戏-ii"}},[t._v("#")]),t._v(" "),s("a",{attrs:{href:"https://leetcode-cn.com/problems/jump-game-ii/",target:"_blank",rel:"noopener noreferrer"}},[t._v("跳跃游戏 II"),s("OutboundLink")],1)]),t._v(" "),s("div",{staticClass:"language-js extra-class"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n    [2    3    1    1    4]\ni=0  max=3\ni=1  step=1  can_arrived=3  max=4\ni=2  max=3    \ni=3  max=4\ni=4  step=2  can_arrived=4  max=8\n*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("jump")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("nums")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" step "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" can_arrived "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" max "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v("nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("length"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("can_arrived "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            step"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),t._v("\n            can_arrived "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" max\n        "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        max "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Math"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("max")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("max"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("nums"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("i"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" step\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("jump")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);n.default=e.exports}}]);